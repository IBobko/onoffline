<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://www.springframework.org/schema/security"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
                        ">

    <global-method-security pre-post-annotations="enabled"/>


    <!-- handler for authorization failure.  Will redirect to the login page. -->
    <beans:bean id="myAccessDeniedHandler" class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
        <beans:property name="errorPage" value="/"/>
    </beans:bean>

    <!--
     Framework maintains a chain of filters in order to apply its services.
     -->
    <http auto-config="false" use-expressions="true">
        <csrf disabled="true"/>
        <form-login
                login-page="/auth"
                authentication-failure-url="/auth/loginfail"
                always-use-default-target="true"
                authentication-success-handler-ref="authSuccessHandler"
        />

        <intercept-url pattern="/*" access="permitAll"/>
        <intercept-url pattern="/auth/**" access="permitAll"/>
        <intercept-url pattern="/agreement/**" access="permitAll"/>
        <intercept-url pattern="/resources/**" access="permitAll"/>
        <intercept-url pattern="/payeer/status" access="permitAll"/>

        <intercept-url pattern="/admin/partner/**" access="hasRole('ROLE_PARTNER')"/>
        <intercept-url pattern="/admin/creator/**" access="hasRole('ROLE_CREATOR')"/>

        <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>

        <logout logout-success-url="/" delete-cookies="JSESSIONID"/>
        <remember-me key="uniqueAndSecret" token-validity-seconds="86400"/>
        <access-denied-handler ref="myAccessDeniedHandler"/>
    </http>

    <authentication-manager>
        <authentication-provider >
            <jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select account_username, account_password,1 from account where upper(account_username) LIKE upper(?)"
                    authorities-by-username-query="select account_username, authority_role from authority where upper(account_username) LIKE upper(?)"/>
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="authSuccessHandler" class="ru.todo100.activer.AuthSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/profile"/>
    </beans:bean>



    <!--<bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">-->
    <!--<constructor-arg>-->
    <!--<bean class="org.springframework.cache.ehcache.EhCacheFactoryBean" p:cacheName="aclCache">-->
    <!--<property name="cacheManager">-->
    <!--<bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</constructor-arg>-->
    <!--</bean>-->
    <!---->
    <!---->

    <!--<beans:bean class="org.springframework.security.acls.AclPermissionEvaluator" id="aclPermissionEvaluator">-->
    <!--<beans:constructor-arg ref="jdbcMutableAclService" />-->
    <!--</beans:bean>-->


    <!--<beans:bean id="userDetailsService" class="ru.todo100.activer.service.impl.OnOffUserDetailsService">-->

    <!--</beans:bean>-->

</beans:beans>